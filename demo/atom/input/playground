class SimpleCheckboxRadioForm extends React.Component {
  constructor() {
    super()
    this.state = {
      country: '',
      category: '',
      termsService: false
    }

    this.onChange = this.onChange.bind(this)
    this.onSubmit = this.onSubmit.bind(this)
  }

  onChange({value, field}) {
    this.setState({
      [field]: value
    })
  }

  onSubmit(ev) {
    ev.preventDefault()
    ev.stopPropagation()

    window.alert(JSON.stringify(this.state))
  }

  isCountrySelected(country) {
    return this.state.country === country
  }

  isCategorySelected(category) {
    return this.state.category === category
  }

  styleIsCategorySelected(category) {
    return this.isCategorySelected(category)
      ? {display: 'inline-block', border: '1px solid black'}
      : {display: 'inline-block', border: '1px solid white'}
  }

  render() {
    const {termsService} = this.state
    return (
      <form
        className="Form"
        style={{
          border: '1px solid #CCC',
          background: '#fff',
          marginTop: '10px',
          padding: '10px'
        }}
        onSubmit={this.onSubmit}
      >
        <div style={{marginTop: '10px'}}>
          <label htmlFor="terms_service">Accept Terms Service</label>
          <AtomInput
            id="terms_service"
            type="checkbox"
            checked={termsService}
            onChange={({ev}) => {
              const value = !termsService
              this.onChange({value, field: 'termsService', ev})
            }}
          />
        </div>
        <div style={{marginTop: '10px'}}>
          <label htmlFor="ES">Spain</label>
          <AtomInput
            id="ES"
            type="radio"
            value="ES"
            checked={this.isCountrySelected('ES')}
            onChange={({ev, value}) => {
              this.onChange({value, field: 'country', ev})
            }}
          />
          <label style={{marginLeft: '20px'}} htmlFor="IT">
            Italy
          </label>
          <AtomInput
            id="IT"
            type="radio"
            value="IT"
            checked={this.isCountrySelected('IT')}
            onChange={({ev, value}) => {
              this.onChange({value, field: 'country', ev})
            }}
          />
          <label style={{marginLeft: '20px'}} htmlFor="FR">
            France
          </label>
          <AtomInput
            id="FR"
            type="radio"
            value="FR"
            checked={this.isCountrySelected('FR')}
            onChange={({ev, value}) => {
              this.onChange({value, field: 'country', ev})
            }}
          />
        </div>
        <div
          style={{
            marginTop: '10px',
            padding: '10px'
          }}
        >
          <label
            htmlFor="categoryHouse"
            style={this.styleIsCategorySelected('house')}
          >
            <img style={imageCheckboxStyle} src={logoHouse} alt="" />
          </label>
          <AtomInput
            hideInput
            id="categoryHouse"
            type="radio"
            value="house"
            checked={this.isCategorySelected('house')}
            onChange={({ev, value}) => {
              this.onChange({value, field: 'category', ev})
            }}
          />

          <label
            htmlFor="categoryRocket"
            style={this.styleIsCategorySelected('rocket')}
          >
            <img style={imageCheckboxStyle} src={logoRocket} alt="" />
          </label>
          <AtomInput
            hideInput
            id="categoryRocket"
            type="radio"
            value="rocket"
            checked={this.isCategorySelected('rocket')}
            onChange={({ev, value}) => {
              this.onChange({value, field: 'category', ev})
            }}
          />

          <label
            htmlFor="categoryGlobe"
            style={this.styleIsCategorySelected('globe')}
          >
            <img style={imageCheckboxStyle} src={logoGlobe} alt="" />
          </label>
          <AtomInput
            hideInput
            id="categoryGlobe"
            value="globe"
            type="radio"
            checked={this.isCategorySelected('globe')}
            onChange={({ev, value}) => {
              this.onChange({value, field: 'category', ev})
            }}
          />
        </div>
        <pre>{JSON.stringify(this.state, null, 2)}</pre>
        <button>Send!</button>
      </form>
    )
  }
}

class DynamicTagsInput extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      value: props.value || '',
      tags: []
    }

    this._onChange = this._onChange.bind(this)
    this._onAddTag = this._onAddTag.bind(this)
    this._onRemoveTag = this._onRemoveTag.bind(this)
  }

  _onChange({value}) {
    this.setState({value})
  }

  _onAddTag(tag) {
    this.setState({
      tags: [...this.state.tags, tag],
      value: ''
    })
  }

  _onRemoveTag(indexTag) {
    this.setState({
      tags: this.state.tags.filter( (_, i) => i !== indexTag)
    })
  }

  render() {
    return (
      <AtomInput
          value={this.state.value}
          onChange={this._onChange}
          onRemoveTag={this._onRemoveTag}
          onAddTag={this._onAddTag}
          tagsCloseIcon={closeIcon}
          tags={this.state.tags}
        />
    )
  }
}

const fieldStyles = {
  marginBottom: '16px'
}

const sectionStyles = {
  marginTop: '70px'
}

const bankAccountMask = {
  mask: 'ES00 0000 0000 00 0000000000'
}

const logoHouse =
  'https://cdn4.iconfinder.com/data/icons/icon-flat-icon-set/50/home-512.png'
const logoRocket =
  'https://cdn4.iconfinder.com/data/icons/icon-flat-icon-set/50/rocket-128.png'
const logoGlobe =
  'https://cdn4.iconfinder.com/data/icons/icon-flat-icon-set/50/globe-2-128.png'

const imageCheckboxStyle = {
  height: '50px',
  width: '50px',
  cursor: 'pointer'
}

const logoLocation = 'https://image.flaticon.com/icons/svg/67/67347.svg'
const IconLocation = () => <img src={logoLocation} />

const closeIcon = (
  <svg viewBox="0 0 24 24">
    <path
      id="a"
      d="M13.42 12l4.79-4.8a1 1 0 0 0-1.41-1.41L12 10.58 7.21 5.79A1 1 0 0 0 5.8 7.2l4.79 4.8-4.79 4.79a1 1 0 1 0 1.41 1.41L12 13.41l4.8 4.79a1 1 0 0 0 1.41-1.41L13.42 12z"
    />
  </svg>
)

return (
  <React.Fragment>
    <div style={fieldStyles}>
      <h4>Size SMALL</h4>
      <AtomInput
        size={inputSizes.SMALL}
        name="first"
        placeholder="Small input"
      />
    </div>
    <div style={fieldStyles}>
      <h4>With placeholder</h4>
      <AtomInput name="second" placeholder="Medium Input" />
    </div>
    <div style={fieldStyles}>
      <h4>With placeholder and value</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        value="Somewhere over the..."
      />
    </div>
    <div style={fieldStyles}>
      <h4>Disabled</h4>
      <AtomInput name="disabled" placeholder="Medium Disabled Input" disabled />
    </div>
    <div style={fieldStyles}>
      <h4>Type: number</h4>
      <AtomInput
        type="number"
        name="number"
        placeholder="Number only input"
        charsSize={10}
      />
    </div>
    <div style={fieldStyles}>
      <h4>Type: date</h4>
      <AtomInput type="date" name="date" charsSize={10} />
    </div>
    <div style={fieldStyles}>
      <h4>With leftAddon and rightAddon</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        leftAddon="http://"
        rightAddon="@schibsted.com"
      />
    </div>
    <div style={fieldStyles}>
      <h4>With leftIcon</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        leftIcon={IconLocation}
      />
    </div>
    <div style={fieldStyles}>
      <h4>With leftIcon and rightAddon</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        leftIcon={IconLocation}
        rightAddon="Location"
      />
    </div>
    <div style={fieldStyles}>
      <h4>With errorState=false</h4>
      <AtomInput name="second" placeholder="Success input" errorState={false} />
    </div>
    <div style={fieldStyles}>
      <h4>With errorState=true</h4>
      <AtomInput name="second" placeholder="Error input" errorState={true} />
    </div>
    <div style={fieldStyles}>
      <h4>Type: sui-password</h4>
      <AtomInput
        type="sui-password"
        name="password"
        placeholder="Password Input"
      />
    </div>
    <div style={fieldStyles}>
      <h4>Type: mask</h4>
      <AtomInput
        type="mask"
        mask={bankAccountMask}
        placeholder="ES00 0000 0000 00 0000000000"
        charsSize={31}
      />
    </div>
    <div style={fieldStyles}>
      <h4>With rightIcon</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        rightIcon={IconLocation}
      />
    </div>
    <div style={fieldStyles}>
      <h4>With rightIcon and leftAddon</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        leftAddon="City"
        rightIcon={IconLocation}
      />
    </div>
    <div style={fieldStyles}>
      <h4>With rightIcon & handler on it</h4>
      <AtomInput
        name="second"
        placeholder="Medium Input"
        rightIcon={IconLocation}
        onClickRightIcon={e => alert('clicked right icon')}
      />
    </div>

    <h2 style={sectionStyles}>With Tags</h2>
    <h3>Dynamic</h3>
    <div style={fieldStyles}>
      <DynamicTagsInput />
    </div>

    <h3>Static</h3>
    <div style={fieldStyles}>
      <h4>With tags</h4>
      <AtomInput
        value="Somewhere over the..."
        onRemoveTag={index => alert('removing tag: ' + index)}
        tagsCloseIcon={closeIcon}
        tags={['john', 'paul', 'george', 'ringo']}
      />
    </div>

    <div style={fieldStyles}>
      <h4>With tags & size=SMALL</h4>
      <AtomInput
        onRemoveTag={index => alert('removing tag: ' + index)}
        onAddTag={value => console.log(value)}
        tagsCloseIcon={closeIcon}
        tags={['john', 'paul', 'george', 'ringo']}
        size={inputSizes.SMALL}
      />
    </div>

    <div style={fieldStyles}>
      <h4>With tags & error</h4>
      <AtomInput
        onRemoveTag={index => alert('removing tag: ' + index)}
        tagsCloseIcon={closeIcon}
        tags={['john', 'paul', 'george', 'ringo']}
        errorState={true}
      />
    </div>

    <h2 style={sectionStyles}>Checkbox & Radio</h2>

    <SimpleCheckboxRadioForm />
  </React.Fragment>
)
